#include <iostream>
#include <math.h>
using namespace std;

// надо на основе алгоритмя coder decoder заебашить заранее подготовленную таблицу, 
// чтобы не ебашить минимальное расстояние Хэмминга, а опредлеять для кодовых слов варианты из массива

int codes[] = {
    0x00, // 00000
    0x0d, // 01101
    0x16, // 10110
    0x1b // 11011
}; // писать после 0х шестнадцатеричное число

int coder(int a) {
    if (a < 0 || a > 3) return -1;
    return codes[a];
}

int chanel(int vec, int mas) {
    return vec ^ mas;
}

int two(int num) {
    int count = 0;
    for (int i = 0; i < sizeof(num) * 8; i++) {
        count += num & 1;
        num >>= 1;
    }
    return count;
}

// 00000,
// 00001,
// 00010,
// 00011,
// 00100,
// 00101,
// 00110,
// 00111,
// 01000,
// 01001,
// 01010,
// 01011,
// 01100,
// 01101,
// 01110,
// 01111,
// 10000,
// 10001,
// 10010,
// 10011,
// 10100,
// 10101,
// 10110,
// 10111,
// 11000,
// 11001,
// 11010,
// 11011,
// 11100,
// 11101,
// 11110,

int decoder(int message) {
    // d - минимальное расстояние хэмминга
    int codes[] = {
        /*0*/ 0,
        /*1*/ 0,
        /*2*/ 0,
        /*3*/ 0,
        /*4*/ 0,
        /*5*/ 0,
        /*6*/ 0,
        /*7*/ 1,
        /*8*/ 1,
        /*9*/ 1,
        /*10*/ 1,
        /*11*/ 1,
        /*12*/ 1,
        /*13*/ 1,
        /*14*/ 1,
        /*15*/ 1,
        /*16*/ 1,
        /*17*/ 1,
        /*18*/ 2,
        /*19*/ 2,
        /*20*/ 2,
        /*21*/ 2,
        /*22*/ 2,
        /*23*/ 2,
        /*24*/ 2,
        /*25*/ 3,
        /*26*/ 3,
        /*27*/ 3,
        /*28*/ 3,
        /*29*/ 3,
        /*30*/ 3,
        /*31*/ 3,
    };
    return codes[message];
}

int main() {
    int m;
    int e;

    std::cin >> m;
    std::cin >> e;

    int a =   coder(m);
    int b = chanel(a, e);

    printf("a=%d = %x\n", m, a);
    printf("b=%d\n", b);
    printf("code=%d\n", decoder(b));
}
    
